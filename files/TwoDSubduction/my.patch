diff --git a/files/TwoDSubduction/phases_1_0.json b/files/TwoDSubduction/phases_1_0.json
new file mode 100644
index 0000000..44c3c2a
--- /dev/null
+++ b/files/TwoDSubduction/phases_1_0.json
@@ -0,0 +1,15 @@
+{
+    "_comments": ["This is the input of compositional phases, taken from table 1 of Arredondo& Billen 2017"],
+    "background": {
+        "_comments": ["Pyrolite composition: 55% olivine, 40% pyroxene, 5% garnet"],
+        "rho_base": 3300.0,
+        "drho": [520.0, 250.0, 670.0, 840.0, 560.0, 597.0, 1170.0],
+        "xc": [0.55, 0.55, 0.05, 0.55, 0.4, 0.4, 0.4]
+    },
+    "spharz": {
+        "_comments": ["Harzburgite composition: 80% olivine, 20% pyroxene"],
+        "rho_base": 3235.0,
+        "drho": [520.0, 250.0, 670.0, 840.0, 560.0, 597.0, 1170.0],
+        "xc": [0.8, 0.8, 0.0, 0.8, 0.20, 0.20, 0.20]
+    }
+}
\ No newline at end of file
diff --git a/shilofue/Parse.py b/shilofue/Parse.py
index 51da160..5a7b781 100644
--- a/shilofue/Parse.py
+++ b/shilofue/Parse.py
@@ -2,6 +2,8 @@ import re
 import os
 import shutil
 import json
+import sys
+import argparse
 import numpy as np
 import shilofue.Plot as Plot
 from shilofue.Utilities import my_assert, re_neat_word, WriteFileHeader
@@ -1260,4 +1262,50 @@ def ParsePhaseInput(inputs):
     for i in range(1, total+1):
         output += "|%.1f" % rho[i]
     
-    return output
\ No newline at end of file
+    return output
+
+
+def main():
+    '''
+    main function of this module
+    Inputs:
+        sys.arg[1](str):
+            commend
+        sys.arg[2, :](str):
+            options
+    '''
+    _commend = sys.argv[1]
+    # parse options
+    parser = argparse.ArgumentParser(description='Parse parameters')
+    parser.add_argument('-j', '--json_file', type=str,
+                        default='./config_case.json',
+                        help='Filename for json file')
+    _options = []
+    try:
+        _options = sys.argv[2: ]
+    except IndexError:
+        pass
+    arg = parser.parse_args(_options)
+
+    # commands
+
+    if _commend == 'phase_input':
+        # example:
+        #   python -m shilofue.Parse phase_input -j ./files/TwoDSubduction/pyrolite_phases_1_0.json
+        my_assert(os.access(arg.json_file, os.R_OK), FileExistsError, "Json file doesn't exist.")
+        with open(arg.json_file) as fin:
+            inputs = json.load(fin)
+
+        # get the outputs
+        outputs = "density = "
+        for key, value in inputs.items():
+            if type(value) == dict:
+                output = ParsePhaseInput(value)
+                outputs += "%s: %s, " % (key, output)
+
+        # print the output 
+        print(outputs)
+
+# run script
+if __name__ == '__main__':
+    main()
\ No newline at end of file
