## update

* show a status NA even if the return string from slurm is ' ' or CG

## copy case to a project

* copy case, especially test cases into this project, write some scripts that take the name of project and the case to fix the rest.

## debug option

* add debug option to print all command used


# fix path

## code path

traking branch with project name

## script path

run script under any foldernon_linear1MaULV3.000e+01testMLT5.000e-02MV1.000e+24NST5.000e-05
so that we can create a group with assigned parameter groups instead of looping each parameters

## separate the configuration of projects

change to the python script, use simplest interfaces as possible

prm files to use

json files to use

source code directory "build_${project_name}"

# layout of doc

## statistic plot

* include the total time
* set x axis as time
* attach a line of step/time and a 'step' axis in addition to the y-axis
* attach a plot of dofs

# layout of pages

* a single file for a case

## content of page

* sequece of pictures, sort them before attached
* an option for including addtional files for case and group
* Insert the comment in the .json file to page

## add configuration

add configuration of server, git account


# writing the installation part

## note down the conda environment of python

## check version of bash

## fix all environmental varibles

## solution for mac

# fix color of multiple lines automatically

# fix test folder structure for python

# fix tests for bash

creat a test folder, and a 'test.sh' file on top to run all tests

add support to json file there after

# change to code

## compile

* add a out-of-source build script

## update plugins

### temperature plugin

* include age of slabs

* use the transform function defined in aspect

### composition

attach it to the temperature plugin

### viscosity plugin

include width and value

### prescribe field

also prescribe composition in ridge area

### include tests for plugins

## complete phase functions
include a phase diagram instead of a clapayron


## change input file using the 'parse map method'

## change .cc file accordingly

add a assertion for all possible entries, like the one for the 'Strategy'
/home/lochy/ASPECT_PROJECT/TwoDSubduction/non_linear14
## merge intial condition into world builder

include strategy of composition and temperature and viscosity and phases in potential


# Changes to be made to python scripts

# Plot.py

* change interface of LinearPlot, possibly changing the settings.

Read from a single json file. 

* change implementation of NewtonSolver

The step and 'all' option mess up with each other right now.

* inprove the interface of ProjectPlot

* use the post_process.json as configuration file

Put every type of plot into one key. e.g. "visit": {}, "newton_solver": {}

# Doc.py

* add a 'delete' option, delete file in the 'docs' folder and clean record in the '.yml' file simutanously;

* add a 'fix' option, if a link is presenting in the .yml file but the file is not found in the docs, then remove the link instead. 

* add a 'update' option, it searches the new cases within a group.


# Changes to be made to bash cases

* fix 'usage' function and help message

## aspect.sh

* change the code to output warning only when a certain flag is given

* with 'submit group', now the scheme is to look at cases that there is no 'stdout' file.

* with 'create'. If it fails, delete the related files

* with 'submit' add the option to submit to local

* for submit use the stdout of python seems to be a bad idea. We could specifically print that to a file. Use this file as the communication between python and bash

* with the 'post_process.json' file, add a look up table / or json for files generated.

    fisrt, look up in bash code for each of the keys. e.g. 'visit', 'newton_solver'.

    Then, based on whether the key is found, call separate functions or python commands to finish the operation.

    Eliminate the function to do project-wise post-postprocess from python and put them in the post_process.


## slurm.sh

* set default value when use them


